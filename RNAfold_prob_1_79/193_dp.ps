%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:48 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (193)
} def

/sequence { (\
GGAAAACCGCGCCUCACAGCCACUACAGUGCGCUGGCAUGGAUCUGCUCGAGCAAUCCCGAGGAUCGGUUCGGGUUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.013898206 ubox
1 8 0.120800185 ubox
1 10 0.019604398 ubox
1 13 0.014556395 ubox
1 44 0.040328180 ubox
1 45 0.586491971 ubox
1 47 0.012847027 ubox
1 48 0.005667578 ubox
1 49 0.003403448 ubox
1 71 0.042940149 ubox
1 75 0.007904567 ubox
1 76 0.007338451 ubox
1 77 0.009385361 ubox
1 78 0.312344644 ubox
2 7 0.120190176 ubox
2 8 0.011470108 ubox
2 10 0.005610896 ubox
2 12 0.014550316 ubox
2 15 0.003816028 ubox
2 43 0.034407526 ubox
2 44 0.621269057 ubox
2 45 0.013296541 ubox
2 47 0.007194398 ubox
2 49 0.003467913 ubox
2 70 0.033994815 ubox
2 71 0.093436442 ubox
2 75 0.010039914 ubox
2 76 0.014183441 ubox
2 77 0.310458357 ubox
2 78 0.550662738 ubox
3 14 0.003688347 ubox
3 43 0.615702133 ubox
3 45 0.037674150 ubox
3 48 0.003417915 ubox
3 69 0.019809782 ubox
3 70 0.085121392 ubox
3 75 0.014171624 ubox
3 76 0.307301786 ubox
3 77 0.549441365 ubox
4 43 0.032921934 ubox
4 45 0.024621825 ubox
4 69 0.037965909 ubox
4 70 0.015607547 ubox
4 75 0.280719880 ubox
4 76 0.541380253 ubox
4 77 0.060639171 ubox
5 43 0.082773408 ubox
5 45 0.024864132 ubox
5 69 0.014249129 ubox
5 70 0.316186087 ubox
5 75 0.334736696 ubox
5 76 0.077488966 ubox
5 77 0.006455336 ubox
6 43 0.059069681 ubox
6 45 0.014046301 ubox
6 69 0.357906659 ubox
6 70 0.009040108 ubox
6 75 0.089330993 ubox
6 76 0.006595771 ubox
7 36 0.012981326 ubox
7 40 0.008647994 ubox
7 41 0.756972565 ubox
7 46 0.010266118 ubox
7 68 0.363430034 ubox
7 72 0.006018098 ubox
7 73 0.506999436 ubox
7 74 0.096064969 ubox
8 35 0.013031512 ubox
8 40 0.759525997 ubox
8 41 0.005904451 ubox
8 46 0.006312381 ubox
8 67 0.363484644 ubox
8 72 0.507902607 ubox
8 73 0.092855447 ubox
8 79 0.004891387 ubox
9 13 0.003415479 ubox
9 15 0.004210511 ubox
9 20 0.004616122 ubox
9 33 0.019094805 ubox
9 37 0.020285893 ubox
9 39 0.756185259 ubox
9 43 0.003908909 ubox
9 44 0.074266418 ubox
9 45 0.006663102 ubox
9 47 0.067321431 ubox
9 66 0.362337363 ubox
9 69 0.007666413 ubox
9 71 0.507351475 ubox
9 78 0.005575587 ubox
10 19 0.004642727 ubox
10 32 0.019303984 ubox
10 36 0.020312573 ubox
10 40 0.010388101 ubox
10 41 0.008809253 ubox
10 46 0.067540678 ubox
10 67 0.059890776 ubox
10 68 0.010316809 ubox
10 72 0.029087013 ubox
10 79 0.006264869 ubox
11 15 0.004475573 ubox
11 31 0.019302329 ubox
11 37 0.762739427 ubox
11 39 0.008298125 ubox
11 43 0.018313710 ubox
11 44 0.018308822 ubox
11 45 0.062668911 ubox
11 47 0.005130030 ubox
11 53 0.003993840 ubox
11 65 0.030412772 ubox
11 66 0.058873196 ubox
11 69 0.497339786 ubox
11 70 0.012093024 ubox
11 71 0.025783939 ubox
11 75 0.007159415 ubox
11 78 0.006310490 ubox
12 30 0.019059278 ubox
12 36 0.761991442 ubox
12 40 0.012986110 ubox
12 41 0.144984013 ubox
12 46 0.005007235 ubox
12 63 0.370050188 ubox
12 68 0.503428447 ubox
12 74 0.007493580 ubox
13 28 0.016515912 ubox
13 35 0.665550763 ubox
13 36 0.026548200 ubox
13 40 0.145849282 ubox
13 41 0.015802020 ubox
13 52 0.003457784 ubox
13 62 0.370268758 ubox
13 67 0.502463679 ubox
13 68 0.005744714 ubox
13 73 0.007464673 ubox
14 27 0.015789735 ubox
14 32 0.003374182 ubox
14 35 0.015150353 ubox
14 36 0.014570259 ubox
14 38 0.108392526 ubox
14 40 0.023447261 ubox
14 41 0.023728192 ubox
14 42 0.014163703 ubox
14 51 0.004828596 ubox
14 61 0.370441848 ubox
14 63 0.014547123 ubox
14 64 0.043358309 ubox
14 67 0.005827265 ubox
14 68 0.005034873 ubox
14 72 0.004762401 ubox
15 28 0.003747999 ubox
15 30 0.014722360 ubox
15 32 0.016086812 ubox
15 35 0.019751818 ubox
15 36 0.137220776 ubox
15 40 0.117155397 ubox
15 41 0.014523050 ubox
15 50 0.004871352 ubox
15 60 0.369973147 ubox
15 62 0.015094218 ubox
15 63 0.045405275 ubox
15 67 0.006630035 ubox
16 29 0.015833192 ubox
16 34 0.023033175 ubox
16 39 0.115956272 ubox
17 28 0.015847521 ubox
17 30 0.014409969 ubox
17 32 0.020427918 ubox
17 35 0.741383529 ubox
17 36 0.020989228 ubox
17 40 0.042520527 ubox
17 46 0.005509929 ubox
17 62 0.003356471 ubox
18 24 0.009930383 ubox
18 29 0.013650997 ubox
18 34 0.989110305 ubox
18 39 0.042340458 ubox
18 45 0.005541112 ubox
19 23 0.010105821 ubox
19 26 0.011360754 ubox
19 29 0.015298680 ubox
19 31 0.083437559 ubox
19 33 0.993944220 ubox
19 37 0.057077219 ubox
19 44 0.005487537 ubox
20 28 0.015951770 ubox
20 30 0.066230995 ubox
20 32 0.993840500 ubox
20 36 0.057150156 ubox
20 41 0.006269400 ubox
21 28 0.040227223 ubox
21 30 0.994619288 ubox
21 32 0.008488741 ubox
21 35 0.057095057 ubox
21 40 0.006651995 ubox
22 29 0.994785572 ubox
22 34 0.055575466 ubox
22 39 0.006186363 ubox
23 28 0.990520097 ubox
23 30 0.026608837 ubox
23 32 0.044004784 ubox
24 28 0.008621772 ubox
24 30 0.009275504 ubox
24 32 0.010309401 ubox
25 29 0.007929021 ubox
26 30 0.008140820 ubox
26 32 0.012947458 ubox
26 35 0.006556003 ubox
26 40 0.009861468 ubox
27 34 0.007229134 ubox
27 39 0.008129834 ubox
28 33 0.007767650 ubox
28 39 0.015665266 ubox
29 38 0.018426875 ubox
29 54 0.003186743 ubox
30 37 0.018909705 ubox
30 53 0.003392559 ubox
31 36 0.018908497 ubox
31 52 0.003391093 ubox
32 53 0.004369076 ubox
33 52 0.004376197 ubox
34 51 0.004043549 ubox
35 48 0.014332099 ubox
35 49 0.003535692 ubox
35 59 0.003601705 ubox
36 47 0.050769601 ubox
36 53 0.059241543 ubox
36 58 0.003284714 ubox
36 59 0.052678748 ubox
36 65 0.003376363 ubox
36 66 0.005938659 ubox
36 70 0.003639082 ubox
36 71 0.010707718 ubox
37 41 0.004492405 ubox
37 46 0.053132320 ubox
37 52 0.059295482 ubox
37 60 0.020261999 ubox
37 62 0.032180965 ubox
37 63 0.018679546 ubox
38 45 0.048697686 ubox
38 65 0.004082967 ubox
38 69 0.035171843 ubox
39 50 0.052134897 ubox
39 51 0.025653096 ubox
39 60 0.031209434 ubox
39 61 0.005961274 ubox
39 64 0.004120406 ubox
39 68 0.036744560 ubox
39 72 0.006813484 ubox
39 79 0.031594943 ubox
40 44 0.010476365 ubox
40 47 0.005552234 ubox
40 48 0.005143451 ubox
40 49 0.052620175 ubox
40 53 0.003401064 ubox
40 57 0.003249364 ubox
40 58 0.376650911 ubox
40 59 0.067939271 ubox
40 66 0.026523143 ubox
40 71 0.012259735 ubox
40 78 0.051790396 ubox
41 47 0.013974091 ubox
41 48 0.043425860 ubox
41 49 0.026838304 ubox
41 57 0.379372006 ubox
41 58 0.059362216 ubox
41 65 0.017281814 ubox
41 66 0.484504498 ubox
41 70 0.012481874 ubox
41 77 0.051648391 ubox
41 78 0.067158880 ubox
42 48 0.025903096 ubox
42 56 0.380464985 ubox
42 65 0.485257990 ubox
42 69 0.012733148 ubox
42 75 0.004003871 ubox
42 76 0.053032595 ubox
42 77 0.069241231 ubox
43 51 0.007557631 ubox
43 54 0.005797575 ubox
43 55 0.371639433 ubox
43 63 0.003764874 ubox
43 64 0.483746090 ubox
43 68 0.012655644 ubox
43 74 0.003266234 ubox
43 79 0.015250132 ubox
44 50 0.008114279 ubox
44 52 0.027213414 ubox
44 62 0.005303377 ubox
44 63 0.480977107 ubox
44 67 0.012481578 ubox
44 73 0.003198559 ubox
44 79 0.034937939 ubox
45 51 0.027281115 ubox
45 54 0.380885920 ubox
45 55 0.004215175 ubox
45 61 0.006012684 ubox
45 62 0.217625059 ubox
45 63 0.012442704 ubox
45 64 0.055527459 ubox
45 79 0.013709192 ubox
46 53 0.387654588 ubox
46 59 0.005473577 ubox
46 66 0.004179668 ubox
46 75 0.728439245 ubox
46 76 0.032463910 ubox
46 77 0.006527049 ubox
46 78 0.025011287 ubox
47 52 0.386402078 ubox
47 60 0.058644523 ubox
47 62 0.432192161 ubox
47 73 0.011979983 ubox
47 74 0.771535133 ubox
48 60 0.004994587 ubox
48 61 0.476131667 ubox
48 73 0.771696269 ubox
49 60 0.479028948 ubox
49 72 0.776368224 ubox
49 79 0.028675357 ubox
50 57 0.103663263 ubox
50 58 0.018102091 ubox
50 59 0.476835095 ubox
50 66 0.005627904 ubox
50 70 0.003454052 ubox
50 71 0.776608181 ubox
50 78 0.031476202 ubox
51 56 0.104065559 ubox
51 65 0.005065308 ubox
51 69 0.016238436 ubox
51 70 0.776022205 ubox
51 77 0.030855097 ubox
52 56 0.008562919 ubox
52 57 0.140550720 ubox
52 58 0.129337413 ubox
52 59 0.005382517 ubox
52 66 0.004484591 ubox
52 69 0.775632806 ubox
52 76 0.021092151 ubox
52 78 0.011403367 ubox
53 67 0.068670983 ubox
53 68 0.772792277 ubox
53 79 0.003224812 ubox
54 65 0.011795488 ubox
54 75 0.006543657 ubox
54 76 0.015409279 ubox
54 77 0.017710196 ubox
55 65 0.761513394 ubox
55 75 0.019586985 ubox
55 76 0.021026766 ubox
55 77 0.003406484 ubox
56 63 0.008215670 ubox
56 64 0.776348339 ubox
56 74 0.004220028 ubox
57 62 0.009975595 ubox
57 63 0.777728268 ubox
57 68 0.003465659 ubox
57 73 0.003521014 ubox
57 74 0.064299708 ubox
58 62 0.772077038 ubox
58 63 0.022987697 ubox
58 67 0.003670154 ubox
58 68 0.028947467 ubox
58 73 0.064805786 ubox
59 63 0.007197856 ubox
59 67 0.038433855 ubox
59 72 0.065771597 ubox
60 66 0.053453890 ubox
60 71 0.065854756 ubox
61 65 0.046535732 ubox
61 70 0.065738554 ubox
62 66 0.006821536 ubox
62 69 0.062097550 ubox
71 79 0.054770456 ubox
72 77 0.003388129 ubox
72 78 0.061476703 ubox
73 77 0.039871298 ubox
73 78 0.025642139 ubox
74 78 0.009091450 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
7 41 0.9500000 lbox
8 40 0.9500000 lbox
9 39 0.9500000 lbox
11 37 0.9500000 lbox
12 36 0.9500000 lbox
13 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
46 75 0.9500000 lbox
47 74 0.9500000 lbox
48 73 0.9500000 lbox
49 72 0.9500000 lbox
50 71 0.9500000 lbox
51 70 0.9500000 lbox
52 69 0.9500000 lbox
53 68 0.9500000 lbox
55 65 0.9500000 lbox
56 64 0.9500000 lbox
57 63 0.9500000 lbox
58 62 0.9500000 lbox
showpage
end
%%EOF
