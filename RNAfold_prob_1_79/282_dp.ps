%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (282)
} def

/sequence { (\
GGAAAAAAGACCAAGAUCAAAAGAUCAGACAAGUCGAGCACGCAAAAGGGUGAGACAAGUCAAGGUCAGCUCACGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.003576928 ubox
1 12 0.071820188 ubox
1 67 0.003810985 ubox
1 70 0.017123101 ubox
1 71 0.038520678 ubox
1 72 0.069208599 ubox
1 74 0.208474410 ubox
1 76 0.013570282 ubox
1 77 0.010862016 ubox
1 78 0.251948911 ubox
2 11 0.071814469 ubox
2 67 0.005059134 ubox
2 70 0.051204856 ubox
2 71 0.057920725 ubox
2 72 0.223185371 ubox
2 74 0.097274602 ubox
2 76 0.015950208 ubox
2 77 0.249984465 ubox
2 78 0.239891956 ubox
3 66 0.004502905 ubox
3 71 0.217786908 ubox
3 76 0.245772250 ubox
3 77 0.238553626 ubox
4 71 0.079391390 ubox
4 76 0.229135845 ubox
4 77 0.010708052 ubox
5 71 0.056908572 ubox
5 76 0.012874875 ubox
5 77 0.008006082 ubox
6 71 0.037409133 ubox
6 76 0.009177173 ubox
6 77 0.005270926 ubox
7 71 0.077603396 ubox
7 76 0.005221621 ubox
7 77 0.008872724 ubox
8 71 0.079464911 ubox
8 76 0.009616110 ubox
8 77 0.004316705 ubox
9 18 0.008542791 ubox
9 35 0.008874638 ubox
9 61 0.003956406 ubox
9 66 0.003413906 ubox
9 67 0.992834796 ubox
9 70 0.052019217 ubox
9 71 0.004664499 ubox
9 72 0.016436932 ubox
9 77 0.009753613 ubox
9 78 0.010063466 ubox
10 17 0.007948881 ubox
10 34 0.008895358 ubox
10 60 0.003957719 ubox
10 66 0.995483002 ubox
10 71 0.014389134 ubox
10 76 0.010756613 ubox
10 77 0.008966738 ubox
11 33 0.008865791 ubox
11 59 0.003935904 ubox
11 65 0.995811482 ubox
11 69 0.007606481 ubox
11 75 0.011164078 ubox
12 64 0.994778711 ubox
12 65 0.003555527 ubox
12 69 0.008534523 ubox
12 75 0.006161699 ubox
13 77 0.003346439 ubox
14 76 0.003643984 ubox
15 26 0.997515871 ubox
15 61 0.004587906 ubox
15 67 0.004090463 ubox
15 72 0.007855203 ubox
15 78 0.006734027 ubox
16 25 0.998489640 ubox
16 60 0.004200151 ubox
16 66 0.004088077 ubox
16 71 0.007715720 ubox
16 76 0.003262939 ubox
16 77 0.006514472 ubox
17 24 0.998461105 ubox
17 59 0.003724669 ubox
17 65 0.004069471 ubox
17 75 0.003257722 ubox
18 23 0.997046311 ubox
18 64 0.004011153 ubox
18 69 0.005391820 ubox
18 75 0.003940491 ubox
23 67 0.043665533 ubox
24 66 0.043728950 ubox
25 65 0.043661275 ubox
26 64 0.043326878 ubox
28 35 0.006459797 ubox
28 60 0.003943477 ubox
28 61 0.996090399 ubox
28 67 0.003745610 ubox
28 77 0.008523904 ubox
28 78 0.015194064 ubox
29 34 0.005736020 ubox
29 60 0.997147724 ubox
29 66 0.003746776 ubox
29 76 0.009372726 ubox
29 77 0.014676690 ubox
30 59 0.996193196 ubox
30 65 0.003736974 ubox
30 75 0.009684131 ubox
31 76 0.003503824 ubox
32 76 0.003366250 ubox
33 56 0.997897262 ubox
33 74 0.021578366 ubox
34 55 0.998893603 ubox
34 57 0.005309567 ubox
34 73 0.021524592 ubox
35 54 0.996983359 ubox
35 79 0.011656868 ubox
36 72 0.024769280 ubox
36 78 0.013327084 ubox
37 51 0.028485726 ubox
37 71 0.024783939 ubox
37 77 0.013298692 ubox
38 51 0.495210928 ubox
38 70 0.024776684 ubox
38 76 0.012996015 ubox
39 48 0.009035326 ubox
39 49 0.041013948 ubox
39 50 0.491930092 ubox
39 52 0.860041343 ubox
39 69 0.023702629 ubox
39 75 0.012918573 ubox
40 51 0.865281528 ubox
41 48 0.393012494 ubox
41 49 0.282007125 ubox
41 50 0.865584946 ubox
41 52 0.025378993 ubox
41 75 0.003259682 ubox
42 51 0.026357804 ubox
42 66 0.009121685 ubox
42 74 0.003584492 ubox
43 48 0.815869095 ubox
43 49 0.078639361 ubox
43 50 0.026462171 ubox
43 65 0.009219321 ubox
47 77 0.004619679 ubox
48 61 0.007744675 ubox
48 72 0.008198647 ubox
48 76 0.005401868 ubox
49 60 0.007707898 ubox
49 71 0.008338185 ubox
50 70 0.008382557 ubox
50 74 0.012455951 ubox
51 58 0.007722648 ubox
51 62 0.005168527 ubox
51 69 0.008346062 ubox
51 73 0.012496134 ubox
52 61 0.005785872 ubox
52 72 0.012551975 ubox
53 60 0.005730644 ubox
53 71 0.012516925 ubox
54 61 0.005685924 ubox
54 67 0.025431738 ubox
54 70 0.010489946 ubox
55 60 0.005046439 ubox
55 66 0.026013708 ubox
56 65 0.026013030 ubox
56 69 0.005937288 ubox
59 67 0.003277552 ubox
62 77 0.027550945 ubox
63 71 0.020406089 ubox
63 76 0.031071283 ubox
64 70 0.021752717 ubox
64 71 0.009143527 ubox
64 72 0.009462885 ubox
64 74 0.008850431 ubox
64 78 0.009417620 ubox
65 70 0.010168716 ubox
65 71 0.007654498 ubox
65 72 0.009223112 ubox
65 74 0.035437080 ubox
65 77 0.008011802 ubox
65 78 0.007384095 ubox
66 73 0.033492434 ubox
66 79 0.003396645 ubox
67 75 0.006246960 ubox
67 79 0.007074198 ubox
68 76 0.018789685 ubox
68 77 0.345833899 ubox
69 74 0.069196258 ubox
69 76 0.417756909 ubox
69 77 0.013485579 ubox
69 78 0.042523655 ubox
70 75 0.423198302 ubox
70 79 0.032676867 ubox
71 75 0.009390831 ubox
71 79 0.004770489 ubox
72 79 0.035625039 ubox
73 77 0.007619095 ubox
74 79 0.043010460 ubox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
12 64 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
18 23 0.9500000 lbox
28 61 0.9500000 lbox
29 60 0.9500000 lbox
30 59 0.9500000 lbox
33 56 0.9500000 lbox
34 55 0.9500000 lbox
35 54 0.9500000 lbox
39 52 0.9500000 lbox
40 51 0.9500000 lbox
41 50 0.9500000 lbox
43 48 0.9500000 lbox
showpage
end
%%EOF
