%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:50:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (216)
} def

/sequence { (\
GGAAAACUGGUCAUGACAUGGACAAAAGUCACAUGAAAACAUCACAGAAAACUGGAUGACAUGGUCAGCAGUACGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.019695248 ubox
1 8 0.007766595 ubox
1 69 0.046737387 ubox
1 72 0.026240263 ubox
1 74 0.365171825 ubox
1 76 0.015276222 ubox
1 77 0.018604598 ubox
1 78 0.312750287 ubox
2 7 0.009683570 ubox
2 66 0.003231741 ubox
2 69 0.050843883 ubox
2 72 0.063118722 ubox
2 74 0.130744613 ubox
2 76 0.028105184 ubox
2 77 0.311457636 ubox
2 78 0.379943647 ubox
3 72 0.161769609 ubox
3 76 0.303990815 ubox
3 77 0.379920703 ubox
4 72 0.055119363 ubox
4 76 0.370434225 ubox
4 77 0.015855063 ubox
5 72 0.082571397 ubox
5 76 0.019450502 ubox
5 77 0.021243997 ubox
6 65 0.007318194 ubox
6 72 0.379049962 ubox
6 76 0.025396407 ubox
6 77 0.005356877 ubox
7 47 0.025012100 ubox
7 63 0.004047997 ubox
7 64 0.007737776 ubox
7 68 0.910310364 ubox
7 71 0.395758712 ubox
7 75 0.021498390 ubox
8 44 0.019955409 ubox
8 46 0.025337933 ubox
8 63 0.007562482 ubox
8 67 0.917633190 ubox
8 68 0.004436204 ubox
8 70 0.390927141 ubox
8 71 0.003467976 ubox
8 73 0.012343513 ubox
8 75 0.006216361 ubox
9 43 0.022641368 ubox
9 45 0.024760462 ubox
9 62 0.005125294 ubox
9 66 0.920600139 ubox
9 69 0.383355845 ubox
9 72 0.012893716 ubox
9 74 0.008509284 ubox
10 23 0.005707215 ubox
10 40 0.005624313 ubox
10 42 0.022683216 ubox
10 43 0.012209021 ubox
10 45 0.010276354 ubox
10 60 0.011301058 ubox
10 65 0.879946115 ubox
10 66 0.191384421 ubox
10 69 0.039061069 ubox
10 74 0.003357729 ubox
11 22 0.005691702 ubox
11 36 0.007812343 ubox
11 39 0.005467822 ubox
11 41 0.022110825 ubox
11 44 0.011449281 ubox
11 59 0.011300033 ubox
11 64 0.908441000 ubox
11 67 0.242894303 ubox
11 68 0.046423195 ubox
11 70 0.010862941 ubox
11 73 0.003275614 ubox
12 20 0.005163221 ubox
12 21 0.005622785 ubox
12 35 0.008761743 ubox
12 58 0.011063484 ubox
12 63 0.992517071 ubox
12 64 0.033041112 ubox
12 68 0.040315738 ubox
12 71 0.007767103 ubox
13 19 0.005145506 ubox
13 34 0.008686695 ubox
13 42 0.020120519 ubox
13 57 0.009902298 ubox
13 62 0.992631528 ubox
13 65 0.044499380 ubox
14 18 0.004571991 ubox
14 31 0.008065623 ubox
14 33 0.008137229 ubox
14 37 0.007482003 ubox
14 38 0.018051290 ubox
14 39 0.006405431 ubox
14 41 0.021109743 ubox
14 44 0.005414568 ubox
14 56 0.009179183 ubox
14 61 0.992142203 ubox
14 63 0.005069776 ubox
14 64 0.044077222 ubox
14 67 0.067077470 ubox
15 30 0.009831055 ubox
15 32 0.007851816 ubox
15 40 0.021143140 ubox
15 43 0.006045047 ubox
15 60 0.988083499 ubox
15 65 0.004310345 ubox
15 66 0.082741566 ubox
16 29 0.009982440 ubox
16 34 0.003281685 ubox
16 42 0.006021199 ubox
16 62 0.035980784 ubox
16 65 0.081876561 ubox
17 28 0.009991197 ubox
17 35 0.990832207 ubox
17 58 0.011838516 ubox
17 63 0.042795494 ubox
17 64 0.070543770 ubox
18 34 0.995482523 ubox
18 57 0.008616938 ubox
18 62 0.055902106 ubox
19 26 0.006521131 ubox
19 31 0.009171283 ubox
19 33 0.996036782 ubox
19 56 0.007911425 ubox
19 61 0.057247552 ubox
20 30 0.008183303 ubox
20 32 0.994956501 ubox
20 60 0.057127704 ubox
21 29 0.005039617 ubox
21 30 0.998121225 ubox
22 29 0.998727436 ubox
23 28 0.996928236 ubox
28 66 0.003947497 ubox
29 36 0.004486769 ubox
30 35 0.004877462 ubox
30 64 0.003926334 ubox
32 63 0.048151294 ubox
33 42 0.004143332 ubox
33 62 0.048283310 ubox
34 39 0.006094299 ubox
34 41 0.004668510 ubox
34 44 0.005363050 ubox
34 61 0.048299103 ubox
35 40 0.005530678 ubox
35 43 0.006478547 ubox
35 60 0.048166187 ubox
36 42 0.006287600 ubox
36 62 0.005465855 ubox
38 62 0.004003775 ubox
40 58 0.993293146 ubox
41 57 0.997513302 ubox
42 55 0.004738697 ubox
42 56 0.998128451 ubox
42 59 0.020772039 ubox
43 54 0.008571016 ubox
43 55 0.997444404 ubox
43 58 0.022726150 ubox
44 53 0.010524293 ubox
44 57 0.021117278 ubox
45 54 0.997117209 ubox
45 55 0.004520296 ubox
46 53 0.997374993 ubox
47 52 0.989134560 ubox
47 53 0.003695826 ubox
47 78 0.020811742 ubox
48 77 0.020875416 ubox
49 76 0.020367002 ubox
51 72 0.033825641 ubox
52 71 0.035085181 ubox
53 70 0.035072676 ubox
53 79 0.005504419 ubox
54 69 0.034844558 ubox
54 78 0.010427129 ubox
55 66 0.006352398 ubox
55 69 0.003495259 ubox
55 77 0.010529459 ubox
56 65 0.006438239 ubox
56 76 0.010562550 ubox
57 64 0.006386950 ubox
57 67 0.035919880 ubox
57 75 0.010568515 ubox
58 66 0.039917383 ubox
58 74 0.010500432 ubox
59 65 0.040608153 ubox
59 72 0.010212765 ubox
60 64 0.040318075 ubox
60 68 0.003701004 ubox
60 71 0.010259984 ubox
61 76 0.005380602 ubox
62 70 0.011388692 ubox
62 75 0.005743345 ubox
63 69 0.011558397 ubox
63 74 0.006151480 ubox
64 74 0.003423255 ubox
65 73 0.003366970 ubox
66 71 0.006556151 ubox
67 77 0.017237108 ubox
68 74 0.007733177 ubox
68 76 0.032637556 ubox
68 78 0.004397990 ubox
69 75 0.072744967 ubox
69 79 0.022383154 ubox
70 76 0.019755081 ubox
70 77 0.022113132 ubox
71 76 0.018695648 ubox
71 77 0.020250205 ubox
71 78 0.105685880 ubox
72 79 0.009216309 ubox
73 77 0.008926857 ubox
74 79 0.041223038 ubox
7 68 0.9500000 lbox
8 67 0.9500000 lbox
9 66 0.9500000 lbox
10 65 0.9500000 lbox
11 64 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 61 0.9500000 lbox
15 60 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
