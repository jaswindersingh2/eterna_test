%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (947)
} def

/sequence { (\
GGAAAGUAACAUGUCGAAAGACAAAAGUACAGUGAAAAAAACUGUACUUAGAUGGAAACAUCAGUUACCUUGUAGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.021965708 ubox
1 68 0.003925931 ubox
1 69 0.088465748 ubox
1 70 0.079020724 ubox
1 71 0.044065143 ubox
1 73 0.453329369 ubox
1 76 0.019557284 ubox
1 77 0.011069634 ubox
1 78 0.255037517 ubox
2 10 0.003877180 ubox
2 15 0.004746283 ubox
2 68 0.079987964 ubox
2 69 0.090862044 ubox
2 70 0.049320768 ubox
2 71 0.090424465 ubox
2 73 0.101601103 ubox
2 76 0.015178180 ubox
2 77 0.253761221 ubox
2 78 0.196625672 ubox
3 14 0.004544588 ubox
3 66 0.014467397 ubox
3 70 0.090072145 ubox
3 71 0.592021107 ubox
3 73 0.049847935 ubox
3 76 0.245664533 ubox
3 77 0.194590742 ubox
4 65 0.012665568 ubox
4 66 0.030727399 ubox
4 70 0.585921580 ubox
4 71 0.389905362 ubox
4 73 0.021724727 ubox
4 76 0.160116045 ubox
4 77 0.028864720 ubox
5 12 0.005435484 ubox
5 65 0.030804616 ubox
5 66 0.003799751 ubox
5 70 0.415635325 ubox
5 71 0.042812992 ubox
5 73 0.035452518 ubox
5 76 0.036450417 ubox
5 77 0.006964282 ubox
6 10 0.006847022 ubox
6 65 0.003259909 ubox
6 68 0.940710864 ubox
6 69 0.297607960 ubox
6 70 0.009051643 ubox
6 71 0.006777899 ubox
6 73 0.011584275 ubox
6 76 0.006111511 ubox
6 78 0.022006630 ubox
7 63 0.027154315 ubox
7 64 0.003465047 ubox
7 67 0.989847533 ubox
7 72 0.016153875 ubox
7 74 0.040803095 ubox
7 75 0.014243965 ubox
8 66 0.990214210 ubox
8 71 0.017017138 ubox
8 73 0.030902122 ubox
8 77 0.029206776 ubox
9 65 0.989939870 ubox
9 66 0.003481192 ubox
9 70 0.014442894 ubox
9 71 0.006220489 ubox
9 73 0.064691979 ubox
9 76 0.032165898 ubox
10 64 0.988997520 ubox
10 72 0.071348264 ubox
10 75 0.032494955 ubox
10 79 0.003338049 ubox
11 70 0.003647439 ubox
11 71 0.064138577 ubox
11 73 0.004299633 ubox
12 23 0.897865976 ubox
12 24 0.041222328 ubox
12 25 0.004240312 ubox
12 60 0.003313606 ubox
12 63 0.041255770 ubox
12 72 0.003682133 ubox
13 22 0.998396064 ubox
13 59 0.003251699 ubox
13 62 0.004636848 ubox
14 21 0.998519487 ubox
15 20 0.998236681 ubox
15 79 0.039917484 ubox
16 22 0.003702027 ubox
16 78 0.044043089 ubox
17 77 0.044006912 ubox
18 76 0.043389149 ubox
21 73 0.043785390 ubox
22 54 0.004093734 ubox
22 72 0.044022272 ubox
23 49 0.009143073 ubox
23 53 0.004092678 ubox
23 71 0.043246124 ubox
24 48 0.006190149 ubox
24 49 0.060299848 ubox
24 70 0.038657685 ubox
25 48 0.045324992 ubox
25 49 0.925559681 ubox
26 48 0.990608701 ubox
26 49 0.020687609 ubox
27 47 0.999908980 ubox
27 48 0.003544206 ubox
28 46 0.999736334 ubox
29 45 0.999745277 ubox
30 44 0.999976963 ubox
31 43 0.999749897 ubox
32 42 0.999933032 ubox
33 38 0.011483258 ubox
33 39 0.014756438 ubox
33 40 0.074103661 ubox
33 41 0.993221015 ubox
48 63 0.003784121 ubox
48 75 0.003988406 ubox
49 63 0.041398471 ubox
49 74 0.010382875 ubox
50 73 0.012869091 ubox
51 62 0.997670351 ubox
51 71 0.005180345 ubox
52 61 0.998650773 ubox
52 70 0.005769401 ubox
52 71 0.013353663 ubox
53 60 0.998607769 ubox
53 63 0.010605859 ubox
54 59 0.998396661 ubox
54 62 0.011675206 ubox
54 69 0.031125260 ubox
55 59 0.007663738 ubox
55 61 0.008531926 ubox
55 62 0.012929638 ubox
55 68 0.031157605 ubox
55 78 0.004322622 ubox
56 61 0.011907568 ubox
56 77 0.004151783 ubox
57 66 0.029728551 ubox
57 76 0.003783520 ubox
58 65 0.031218482 ubox
58 73 0.003343707 ubox
59 64 0.031221269 ubox
59 72 0.003471103 ubox
60 71 0.003384471 ubox
62 72 0.003706220 ubox
63 70 0.025689303 ubox
63 71 0.005152322 ubox
63 76 0.004349069 ubox
63 77 0.010540481 ubox
64 69 0.027576941 ubox
64 70 0.005069089 ubox
64 71 0.003428391 ubox
64 76 0.012929462 ubox
64 78 0.005652449 ubox
65 72 0.003257944 ubox
65 74 0.004276835 ubox
65 75 0.034874803 ubox
66 74 0.047696751 ubox
67 73 0.048700820 ubox
67 76 0.010579384 ubox
68 72 0.048363415 ubox
68 75 0.012681168 ubox
69 75 0.075239327 ubox
69 79 0.013574023 ubox
70 74 0.068300869 ubox
70 75 0.010632345 ubox
70 79 0.006308948 ubox
71 75 0.006297823 ubox
71 79 0.055437064 ubox
72 76 0.006990959 ubox
72 77 0.019627462 ubox
72 78 0.112594033 ubox
73 79 0.007929984 ubox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
9 65 0.9500000 lbox
10 64 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
25 49 0.9500000 lbox
26 48 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
