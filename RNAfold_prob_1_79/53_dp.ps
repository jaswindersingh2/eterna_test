%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Jun 15 13:51:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (53)
} def

/sequence { (\
GGAAAAACACUAGAAACAAAAGUUUCCCAAGUCUCGAAAACGAGACGUCAAAAGACGACAAGGUAGUGCCUUUCGUUCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.220365595 ubox
1 10 0.136353154 ubox
1 11 0.070083467 ubox
1 17 0.004780124 ubox
1 26 0.009107918 ubox
1 27 0.233642195 ubox
1 28 0.292250439 ubox
1 46 0.003274339 ubox
1 49 0.059323837 ubox
1 59 0.005012075 ubox
1 70 0.032550125 ubox
1 73 0.003368017 ubox
1 74 0.137250717 ubox
1 76 0.029516498 ubox
1 77 0.009106692 ubox
1 78 0.139579596 ubox
2 8 0.051621289 ubox
2 10 0.074367888 ubox
2 11 0.016959340 ubox
2 25 0.009060685 ubox
2 26 0.235292150 ubox
2 27 0.291400489 ubox
2 28 0.017059857 ubox
2 48 0.045959696 ubox
2 49 0.080338668 ubox
2 69 0.032588783 ubox
2 72 0.004999995 ubox
2 73 0.133755346 ubox
2 74 0.591908586 ubox
2 76 0.005088413 ubox
2 77 0.106567619 ubox
2 78 0.169678442 ubox
3 11 0.015541504 ubox
3 24 0.009939237 ubox
3 25 0.232827746 ubox
3 48 0.074980146 ubox
3 71 0.005137428 ubox
3 72 0.130567353 ubox
3 73 0.592840703 ubox
3 76 0.092937139 ubox
3 77 0.154835058 ubox
4 11 0.024905944 ubox
4 23 0.008535076 ubox
4 24 0.216406264 ubox
4 25 0.041007199 ubox
4 48 0.005403726 ubox
4 67 0.003170328 ubox
4 71 0.116424161 ubox
4 72 0.590182125 ubox
4 73 0.023421647 ubox
4 76 0.118633598 ubox
4 77 0.010110826 ubox
5 11 0.020310416 ubox
5 23 0.157685983 ubox
5 24 0.042207838 ubox
5 25 0.080857747 ubox
5 48 0.004220696 ubox
5 71 0.577212671 ubox
5 72 0.027796280 ubox
5 73 0.027254633 ubox
5 76 0.009682284 ubox
5 77 0.008582143 ubox
6 11 0.022384819 ubox
6 23 0.032111764 ubox
6 24 0.108305702 ubox
6 25 0.012827934 ubox
6 48 0.005045370 ubox
6 71 0.028004417 ubox
6 72 0.029572627 ubox
6 73 0.025860366 ubox
6 76 0.007748178 ubox
6 77 0.074237943 ubox
7 11 0.011545755 ubox
7 23 0.130577838 ubox
7 24 0.014594004 ubox
7 25 0.005382867 ubox
7 32 0.009778908 ubox
7 48 0.063599358 ubox
7 64 0.007975690 ubox
7 67 0.024280360 ubox
7 71 0.025963502 ubox
7 72 0.023156241 ubox
7 73 0.015558625 ubox
7 76 0.086458925 ubox
7 77 0.004901790 ubox
8 13 0.016963312 ubox
8 22 0.137190387 ubox
8 31 0.012760775 ubox
8 47 0.067709851 ubox
8 54 0.007542225 ubox
8 57 0.003273591 ubox
8 63 0.008213693 ubox
8 66 0.024491009 ubox
8 68 0.609645930 ubox
8 75 0.088657845 ubox
8 79 0.030053051 ubox
9 23 0.115572035 ubox
9 32 0.030615870 ubox
9 48 0.057541357 ubox
9 64 0.023960413 ubox
9 67 0.610327856 ubox
9 73 0.005202377 ubox
9 76 0.034702061 ubox
9 77 0.003840486 ubox
10 22 0.130341852 ubox
10 31 0.041585409 ubox
10 47 0.061515410 ubox
10 54 0.019970876 ubox
10 57 0.003256656 ubox
10 62 0.008375535 ubox
10 63 0.024168447 ubox
10 66 0.610457486 ubox
10 75 0.037436616 ubox
10 79 0.029514137 ubox
11 15 0.007588515 ubox
11 16 0.025510212 ubox
11 18 0.032898756 ubox
11 19 0.032370069 ubox
11 20 0.024779347 ubox
11 21 0.126577916 ubox
11 22 0.004653264 ubox
11 29 0.040567803 ubox
11 30 0.057031608 ubox
11 47 0.004858284 ubox
11 50 0.005733375 ubox
11 51 0.006752105 ubox
11 52 0.006717233 ubox
11 53 0.020357449 ubox
11 61 0.008290598 ubox
11 62 0.023373625 ubox
11 65 0.606741447 ubox
11 79 0.005949022 ubox
12 25 0.004132682 ubox
12 48 0.003866818 ubox
12 64 0.571412241 ubox
12 73 0.004501396 ubox
12 77 0.004603921 ubox
13 17 0.035300385 ubox
13 24 0.006068573 ubox
13 25 0.009247074 ubox
13 26 0.959696395 ubox
13 27 0.042739089 ubox
13 28 0.016283960 ubox
13 49 0.005076294 ubox
13 78 0.009792364 ubox
14 23 0.006337465 ubox
14 24 0.008991093 ubox
14 25 0.962974870 ubox
14 48 0.004046356 ubox
14 77 0.007391355 ubox
15 23 0.007582589 ubox
15 24 0.963076281 ubox
15 25 0.003820597 ubox
15 76 0.004996337 ubox
15 77 0.004034692 ubox
16 23 0.963695878 ubox
16 24 0.003567015 ubox
16 64 0.006100652 ubox
16 76 0.005035259 ubox
17 22 0.962406029 ubox
17 62 0.003487774 ubox
17 63 0.007541448 ubox
17 75 0.005700894 ubox
22 27 0.003525706 ubox
22 28 0.004863361 ubox
22 56 0.044987108 ubox
22 59 0.004578701 ubox
23 52 0.007448054 ubox
23 53 0.013031767 ubox
23 54 0.007786249 ubox
23 55 0.044860505 ubox
23 58 0.004545381 ubox
24 51 0.008444648 ubox
24 52 0.014210216 ubox
24 53 0.011996763 ubox
24 54 0.044240724 ubox
24 57 0.004242315 ubox
25 50 0.008176479 ubox
25 51 0.013562559 ubox
25 52 0.012371153 ubox
25 53 0.039223160 ubox
26 63 0.008177022 ubox
27 31 0.009264227 ubox
27 47 0.034851701 ubox
27 54 0.010798450 ubox
27 57 0.009012797 ubox
27 62 0.013018076 ubox
27 63 0.148237445 ubox
27 75 0.004719671 ubox
27 79 0.009842216 ubox
28 47 0.051631111 ubox
28 54 0.007901976 ubox
28 57 0.012503478 ubox
28 62 0.148869113 ubox
28 63 0.009400274 ubox
28 75 0.006839585 ubox
28 79 0.014383784 ubox
29 48 0.097288881 ubox
29 77 0.004150223 ubox
30 48 0.070423833 ubox
30 76 0.003549488 ubox
31 46 0.984256162 ubox
31 49 0.006746892 ubox
31 59 0.017485278 ubox
32 45 0.996766376 ubox
32 58 0.013730306 ubox
33 44 0.999912675 ubox
33 57 0.005206844 ubox
34 43 0.999811512 ubox
35 42 0.999883883 ubox
35 79 0.004118478 ubox
36 41 0.974007400 ubox
36 78 0.004538583 ubox
37 77 0.004129339 ubox
39 77 0.003687067 ubox
40 76 0.005415987 ubox
41 47 0.003191492 ubox
41 75 0.005875075 ubox
42 74 0.005882188 ubox
43 73 0.005707139 ubox
44 59 0.005124219 ubox
44 72 0.003669243 ubox
46 54 0.003166238 ubox
46 57 0.160669336 ubox
46 79 0.008259067 ubox
47 56 0.540404653 ubox
47 59 0.348519208 ubox
47 78 0.035372680 ubox
48 52 0.008414473 ubox
48 53 0.012595862 ubox
48 54 0.005167267 ubox
48 55 0.542608732 ubox
48 58 0.348940940 ubox
48 63 0.004987186 ubox
48 79 0.004431420 ubox
49 54 0.543356777 ubox
49 57 0.348848228 ubox
49 62 0.006769437 ubox
49 79 0.017489703 ubox
50 77 0.006121336 ubox
51 76 0.003252050 ubox
51 77 0.009287268 ubox
52 76 0.004870940 ubox
52 77 0.012487202 ubox
53 76 0.006351398 ubox
53 77 0.031068426 ubox
54 59 0.008587352 ubox
54 74 0.005125349 ubox
54 76 0.026015340 ubox
54 77 0.656464088 ubox
54 78 0.272554088 ubox
55 64 0.027791682 ubox
55 73 0.005101223 ubox
55 76 0.726533787 ubox
55 77 0.192883001 ubox
56 62 0.025090949 ubox
56 63 0.036136690 ubox
56 75 0.759927335 ubox
56 79 0.018814485 ubox
57 64 0.006937012 ubox
57 69 0.003381530 ubox
57 73 0.006753745 ubox
57 74 0.777116522 ubox
57 77 0.054240920 ubox
57 78 0.034494988 ubox
58 64 0.042349556 ubox
58 67 0.007703664 ubox
58 72 0.010232257 ubox
58 73 0.769929115 ubox
58 76 0.064122519 ubox
58 77 0.026665334 ubox
59 63 0.051989699 ubox
59 66 0.008008646 ubox
59 68 0.005417594 ubox
59 75 0.068662906 ubox
60 64 0.004472108 ubox
60 67 0.004958870 ubox
60 71 0.037815711 ubox
60 72 0.760343552 ubox
60 73 0.019898880 ubox
61 71 0.787411767 ubox
61 72 0.020550049 ubox
62 69 0.008301712 ubox
62 70 0.791183642 ubox
62 71 0.015917530 ubox
63 69 0.790926968 ubox
63 70 0.015842150 ubox
64 68 0.739902794 ubox
69 75 0.004086690 ubox
70 75 0.004224439 ubox
74 79 0.003460066 ubox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
34 43 0.9500000 lbox
35 42 0.9500000 lbox
36 41 0.9500000 lbox
54 77 0.9500000 lbox
55 76 0.9500000 lbox
56 75 0.9500000 lbox
57 74 0.9500000 lbox
58 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
64 68 0.9500000 lbox
showpage
end
%%EOF
